Git and Github Primer

Git is version control 
- manage your files
- coordinate big changes
- good for experimenting and separate 'branches' or 'lines'  of work

Useful commands
git init
git status
-branch
-tracked files
-which commit
git add .
git diff
-tells you what's changed in the repo
git log
-commit list
-params: --oneline --graph --all --decorate (lists commits and their branches)
git show
git branch 'branchname'
git checkout 'branchname'
-checkout switches branch
-params: -b
git commit
-params: -a for all

merge
git checkout master (switch to master rbanch)
git merge 'branchname'

NOTES
git is line-based. this means that it doesn't recognize intra-line changes

GITHUB
-create new repo
git remote add origin http://github/com/user/git.giot
git push -u origin master

CODE STRUCTURE
Don't want monolithic scripts. Mainly because it's hard to maintain. Hard to understand.

DRY principle (don't repeat yourself) - methods
SRP (single responsibility problems) - classes
-don't solve many problems
-few arguments

YOUTUBE ANALYTICS NOTES
